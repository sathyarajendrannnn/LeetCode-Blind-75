class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def invertTree(self, A):
        # Base case: if the node is None, return None
        if A is None:
            return None
        
        # Swap the left and right children
        A.left, A.right = A.right, A.left
        
        # Recursively invert the left and right subtrees
        self.invertTree(A.left)
        self.invertTree(A.right)
        
        return A  # Return the root of the inverted tree
